"use strict";

var curryN = require('../function/curryN');

var isPlainObject = require('../is/plainObject');

var objectKeys = require('./keys');

var assign = require('../assign');

/**
 * Create a new object with the own properties of the first object deeply merged with
 * the own properties of the other objects. If a key exists in several objects, then all values associated with this key
 * are merged recursively unless at least one of them is not a plain object. Merging is done from left to right.
 *
 * @param {...Object} sources
 * @return {Object}
 * @example
 *
 * mergeDeep({ 'name': 'fred', 'info': { 'age': 10, 'sex': 'm' } }, { 'info': { 'age': 40 }); //=> { 'name': 'fred', 'info': { 'age': 40, 'sex': 'm' } }
 */
var mergeDeep = function mergeDeep() {
  var result = assign((arguments.length <= 0 ? undefined : arguments[0]) || {});

  for (var i = 1; i < arguments.length; i++) {
    var src = i < 0 || arguments.length <= i ? undefined : arguments[i];

    if (!src) {
      continue;
    }

    var keys = objectKeys(src);

    for (var j = 0; j < keys.length; j++) {
      var key = keys[j];
      var value = src[key];
      var res = result[key];

      if (isPlainObject(res) && isPlainObject(value)) {
        result[key] = mergeDeep(res, value);
      } else {
        result[key] = value;
      }
    }
  }

  return result;
};

module.exports = curryN(2, mergeDeep);