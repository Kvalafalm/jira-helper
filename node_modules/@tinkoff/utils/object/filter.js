"use strict";

var curryN = require('../function/curryN');

var objectKeys = require('./keys');

/**
 * Takes a predicate and a object, and returns a new object
 * containing only members which satisfy the
 * given predicate.
 *
 * @param {Function} fn
 * @param {Object} obj
 * @return {Object}
 * @example
 *
 *      var isEven = n => n % 2 === 0;
 *
 *      filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}
 */
module.exports = curryN(2, function (fn, obj) {
  if (obj === void 0) {
    obj = {};
  }

  var keys = objectKeys(obj);
  var result = {};

  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];

    if (fn(obj[key], key, obj)) {
      result[key] = obj[key];
    }
  }

  return result;
});