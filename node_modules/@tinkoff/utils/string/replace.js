"use strict";

var curryN = require('../function/curryN');

/**
 * Replace a substring or regex match in a string with a replacement.
 *
 * @param {RegExp|String} pattern A regular expression or a substring to match.
 * @param {String} replacement The string to replace the matches with.
 * @param {String} str The String to do the search and replacement in.
 * @return {String} The result.
 * @example
 *
 *      replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'
 *      replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'
 *
 *      // Use the "g" (global) flag to replace all occurrences:
 *      replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'
 */
module.exports = curryN(3, function (pattern, replacement, str) {
  if (pattern === void 0) {
    pattern = '';
  }

  if (replacement === void 0) {
    replacement = '';
  }

  if (str === void 0) {
    str = '';
  }

  return str.replace(pattern, replacement);
});