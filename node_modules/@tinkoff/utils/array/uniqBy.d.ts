declare type KeyFunc<T> = (a: T) => string;
interface UniqBy {
    <T>(fn: KeyFunc<T>, list: ArrayLike<T>): T[];
    <T>(fn: KeyFunc<T>): (list: ArrayLike<T>) => T[];
}
declare const _default: UniqBy;
/**
 * Returns unique items in array. Uniqueness is defined by `fn`.
 *
 * @param {Function} fn
 * @param {Array} arr
 * @return {Array}
 *
 * @example
 *
 *      uniqBy(x => x % 2, [1, 2, 2, 3, 4, 5, 5, 5]) // [1, 2]
 */
export default _default;
