interface Drop {
    (n: number, xs: string): string;
    <T>(n: number, xs: ArrayLike<T>): T[];
    (n: number): {
        (xs: string): string;
        <T>(xs: ArrayLike<T>): T[];
    };
}
declare const _default: Drop;
/**
 * Returns all but the first `n` elements of the given list, string.
 *
 * @param {Number} n
 * @param {*} xs
 * @return {*} A copy of list without the first `n` elements
 * @example
 *
 *      drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']
 *      drop(2, ['foo', 'bar', 'baz']); //=> ['baz']
 *      drop(3, ['foo', 'bar', 'baz']); //=> []
 *      drop(4, ['foo', 'bar', 'baz']); //=> []
 */
export default _default;
