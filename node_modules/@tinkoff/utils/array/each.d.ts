import { ArrVoid } from '../typings/types';
interface Each {
    <T>(fn: ArrVoid<T>, arr: ArrayLike<T>): void;
    <T>(fn: ArrVoid<T>): (arr: ArrayLike<T>) => void;
}
declare const _default: Each;
/**
 * Iterate over an input `list`, calling a provided function `fn` for each
 * element in the list.
 *
 * @param {Function} fn The function to invoke. Receives three argument: `value`, `index`, `arr`.
 * @param {Array} arr The list to iterate over.
 * @example
 *
 *      var printXPlusFive = x => console.log(x + 5);
 *      each(printXPlusFive, [1, 2, 3]);
 *      // logs 6
 *      // logs 7
 *      // logs 8
 */
export default _default;
