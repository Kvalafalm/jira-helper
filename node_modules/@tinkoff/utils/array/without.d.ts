interface Without {
    <T>(list1: ArrayLike<T>, list2: ArrayLike<T>): T[];
    <T>(list1: ArrayLike<T>): (list2: ArrayLike<T>) => T[];
}
declare const _default: Without;
/**
 * Returns a new list without values in the first argument.
 *
 * @deprecated use array/difference instead
 * @param {Array} xs The values to be removed from `list2`.
 * @param {Array} list The array to remove values from.
 * @return {Array} The new array without values in `list1`.
 * @example
 *
 *      without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]
 */
export default _default;
