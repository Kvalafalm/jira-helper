"use strict";

var curryN = require('../function/curryN');

/**
 * Returns a single item by iterating through the list, successively calling
 * the iterator function and passing it an accumulator value and the current
 * value from the array, and then passing the result to the next call.
 *
 * @param {Function} fn The iterator function. Receives two values, the accumulator and the
 *        current element from the array.
 * @param {*} acc The accumulator value.
 * @param {Array} arr The list to iterate over.
 * @return {*} The final, accumulated value.
 * @example
 *
 *      var numbers = [1, 2, 3];
 *      var plus = (a, b) => a + b;
 *
 *      reduce(plus, 10, numbers); //=> 16
 */
module.exports = curryN(3, function (fn, acc, arr) {
  if (arr === void 0) {
    arr = [];
  }

  var len = arr.length;

  for (var i = 0; i < len; i++) {
    acc = fn(acc, arr[i], i, arr);
  }

  return acc;
});