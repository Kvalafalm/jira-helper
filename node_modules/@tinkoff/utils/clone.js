"use strict";

var type = require('./type');

var mapObj = require('./object/map');

var mapArr = require('./array/map');

var isReactElement = require('./is/reactElement');

var isReactComponent = require('./is/reactComponent');

var cloneRegExp = function cloneRegExp(pattern) {
  return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));
};
/**
 * Creates a deep copy of the value which may contain (nested) `Array`s and
 * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are not
 * copied, but assigned by their reference.
 *
 * @param {*} x The value to clone
 * @return {*} A copy of a value.
 * @example
 *
 *      var objects = [{}, {}, {}];
 *      var objectsClone = clone(objects);
 *      objects[0] === objectsClone[0]; //=> false
 */


var clone = function clone(x) {
  switch (type(x)) {
    case 'Object':
      // Skip clone react object
      if (isReactComponent(x) || isReactElement(x)) {
        break;
      } else {
        return mapObj(clone, x);
      }

    case 'Array':
      return mapArr(clone, x);

    case 'Date':
      return new Date(x.valueOf());

    case 'RegExp':
      return cloneRegExp(x);
  }

  return x;
};

module.exports = clone;