import type { Plugin } from '@tinkoff/request-core';
declare module '@tinkoff/request-core/lib/types.h' {
    interface Request {
        deduplicateCache?: boolean;
        deduplicateCacheForce?: boolean;
    }
}
declare const _default: ({ shouldExecute, getCacheKey }?: {
    shouldExecute?: boolean;
    getCacheKey?: any;
}) => Plugin;
/**
 * Deduplicate requests with equal cache keys before making a request
 *
 * requestParams:
 *      deduplicateCache {boolean} - disable this plugin at all
 *      deduplicateCacheForce {boolean} - plugin will only be executed on complete phase
 *
 * metaInfo:
 *      deduplicated {boolean} - is current request was deduplicated (is not set for the first request of equals requests)
 *
 * @param {boolean} [shouldExecute = true] is plugin activated by default
 * @param {function} getCacheKey function used for generate cache key
 */
export default _default;
