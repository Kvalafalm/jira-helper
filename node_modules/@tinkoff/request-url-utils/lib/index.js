'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var eachObj = require('@tinkoff/utils/object/each');
var isNil = require('@tinkoff/utils/is/nil');
var isObject = require('@tinkoff/utils/is/object');
var reduceArr = require('@tinkoff/utils/array/reduce');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var eachObj__default = /*#__PURE__*/_interopDefaultLegacy(eachObj);
var isNil__default = /*#__PURE__*/_interopDefaultLegacy(isNil);
var isObject__default = /*#__PURE__*/_interopDefaultLegacy(isObject);
var reduceArr__default = /*#__PURE__*/_interopDefaultLegacy(reduceArr);

const serializeQuery = (obj, init = '') => {
    const searchParams = new URLSearchParams(init);
    const setParams = (params, keys = []) => {
        eachObj__default["default"]((v, k) => {
            if (isNil__default["default"](v))
                return;
            const arr = keys.length ? [...keys, k] : [k];
            if (isObject__default["default"](v)) {
                setParams(v, arr);
            }
            else {
                searchParams.set(reduceArr__default["default"]((acc, curr, i) => (i ? `${acc}[${curr}]` : curr), '', arr), v);
            }
        }, params);
    };
    setParams(obj);
    return searchParams.toString();
};
const addQuery = (url, query, querySerializer = serializeQuery) => {
    const [path, search] = url.split('?', 2);
    const serialized = querySerializer(query, search);
    if (!serialized) {
        return path;
    }
    return `${path}?${serialized}`;
};
const normalizeUrl = (url) => {
    if (typeof window === 'undefined' && !/^https?:\/\//.test(url)) {
        return `http://${url}`;
    }
    return url;
};

exports.addQuery = addQuery;
exports.normalizeUrl = normalizeUrl;
exports.serializeQuery = serializeQuery;
